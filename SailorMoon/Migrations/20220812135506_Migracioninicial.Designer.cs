// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SailorMoon.Context;

#nullable disable

namespace SailorMoon.Migrations
{
    [DbContext(typeof(SailorMoonContext))]
    [Migration("20220812135506_Migracioninicial")]
    partial class Migracioninicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SailorMoon.Models.Asistencias", b =>
                {
                    b.Property<int>("IdAsistencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_asistencias");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsistencias"), 1L, 1);

                    b.Property<int?>("IdEstudiante")
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante");

                    b.Property<string>("InastInjustificada")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("inast_injustificada");

                    b.Property<string>("InastJustificada")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("inast_justificada");

                    b.Property<string>("TardInjustificada")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("tard_injustificada");

                    b.Property<string>("TardJustificada")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("tard_justificada");

                    b.HasKey("IdAsistencias")
                        .HasName("PK__asistenc__B74A34E3F86B36F4");

                    b.HasIndex("IdEstudiante");

                    b.ToTable("asistencias", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.ConduccionDescriptiva", b =>
                {
                    b.Property<int>("IdConduccionDescriptiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_conduccion_descriptiva");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConduccionDescriptiva"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdEstudiante")
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante");

                    b.Property<string>("IdPersonal")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id_personal");

                    b.Property<string>("Periodo")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("periodo");

                    b.HasKey("IdConduccionDescriptiva")
                        .HasName("PK__conducci__E2291AAA4A171E4F");

                    b.HasIndex("IdEstudiante");

                    b.ToTable("conduccion_descriptiva", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"), 1L, 1);

                    b.Property<string>("NombreCurso")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("nombre_curso");

                    b.HasKey("IdCurso")
                        .HasName("PK__curso__5D3F7502EB9E7BF4");

                    b.ToTable("curso", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstudiante"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Carnet")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("carnet");

                    b.Property<string>("CodigoEst")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo_est");

                    b.Property<int?>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<int?>("IdGradoFk")
                        .HasColumnType("int")
                        .HasColumnName("id_grado_fk");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstudiante")
                        .HasName("PK__estudian__E0B2763C131F02AF");

                    b.HasIndex("IdGradoFk");

                    b.ToTable("estudiante", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Grado", b =>
                {
                    b.Property<int>("IdGrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_grado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrado"), 1L, 1);

                    b.Property<string>("Grado1")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("grado");

                    b.Property<string>("Seccion")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("seccion");

                    b.Property<string>("Tutor")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("tutor");

                    b.HasKey("IdGrado")
                        .HasName("PK__grado__6DB797EE553FC898");

                    b.ToTable("grado", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Institucion", b =>
                {
                    b.Property<int>("IdInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_institucion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInstitucion"), 1L, 1);

                    b.Property<string>("CodigoModular")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo_modular");

                    b.Property<string>("Logo")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("logo");

                    b.Property<string>("Nivel")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nivel");

                    b.Property<string>("Nombre")
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("nombre");

                    b.HasKey("IdInstitucion")
                        .HasName("PK__instituc__680718D3D39D9159");

                    b.ToTable("institucion", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Notas", b =>
                {
                    b.Property<int>("IdNotas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_notas");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotas"), 1L, 1);

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_Curso");

                    b.Property<int?>("IdEstudianteFk")
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante_fk");

                    b.Property<double?>("Nota1")
                        .HasColumnType("float")
                        .HasColumnName("nota1");

                    b.Property<double?>("Nota2")
                        .HasColumnType("float")
                        .HasColumnName("nota2");

                    b.Property<double?>("Nota3")
                        .HasColumnType("float")
                        .HasColumnName("nota3");

                    b.Property<double?>("Nota4")
                        .HasColumnType("float")
                        .HasColumnName("nota4");

                    b.Property<double?>("Promedio")
                        .HasColumnType("float")
                        .HasColumnName("promedio");

                    b.HasKey("IdNotas")
                        .HasName("PK__notas__832F7CFAC639F399");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdEstudianteFk");

                    b.ToTable("notas", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.NotasPeriodo", b =>
                {
                    b.Property<int>("IdPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_periodo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeriodo"), 1L, 1);

                    b.Property<int?>("IdNotas")
                        .HasColumnType("int")
                        .HasColumnName("id_notas");

                    b.Property<string>("NotaPeriodo1")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nota_periodo1");

                    b.Property<string>("NotaPeriodo2")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nota_periodo2");

                    b.Property<string>("NotaPeriodo3")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nota_periodo3");

                    b.Property<string>("NotaPeriodo4")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nota_periodo4");

                    b.Property<string>("PromedioAnual")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("promedio_anual");

                    b.HasKey("IdPeriodo")
                        .HasName("PK__notas_pe__801188B7406FD76B");

                    b.HasIndex("IdNotas");

                    b.ToTable("notas_periodo", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Personal", b =>
                {
                    b.Property<int>("IdPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_personal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonal"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Clave")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("clave");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int?>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_usuario");

                    b.Property<string>("Nombre")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("nombre");

                    b.Property<string>("Usuario")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("usuario");

                    b.HasKey("IdPersonal")
                        .HasName("PK__personal__418FB8085ED2EB8C");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("personal", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"), 1L, 1);

                    b.Property<string>("Tipo")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("tipo");

                    b.HasKey("IdTipoUsuario")
                        .HasName("PK__tipo_usu__B17D78C8E2DB4D10");

                    b.ToTable("tipo_usuario", (string)null);
                });

            modelBuilder.Entity("SailorMoon.Models.Asistencias", b =>
                {
                    b.HasOne("SailorMoon.Models.Estudiante", "IdEstudianteNavigation")
                        .WithMany("Asistencias")
                        .HasForeignKey("IdEstudiante")
                        .HasConstraintName("FK__asistenci__id_es__2B3F6F97");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("SailorMoon.Models.ConduccionDescriptiva", b =>
                {
                    b.HasOne("SailorMoon.Models.Estudiante", "IdEstudianteNavigation")
                        .WithMany("ConduccionDescriptiva")
                        .HasForeignKey("IdEstudiante")
                        .HasConstraintName("FK__conduccio__id_pe__35BCFE0A");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("SailorMoon.Models.Estudiante", b =>
                {
                    b.HasOne("SailorMoon.Models.Grado", "IdGradoFkNavigation")
                        .WithMany("Estudiante")
                        .HasForeignKey("IdGradoFk")
                        .HasConstraintName("FK__estudiant__id_gr__286302EC");

                    b.Navigation("IdGradoFkNavigation");
                });

            modelBuilder.Entity("SailorMoon.Models.Notas", b =>
                {
                    b.HasOne("SailorMoon.Models.Curso", "IdCursoNavigation")
                        .WithMany("Notas")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FK__notas__id_Curso__38996AB5");

                    b.HasOne("SailorMoon.Models.Estudiante", "IdEstudianteFkNavigation")
                        .WithMany("Notas")
                        .HasForeignKey("IdEstudianteFk")
                        .HasConstraintName("FK__notas__id_estudi__398D8EEE");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdEstudianteFkNavigation");
                });

            modelBuilder.Entity("SailorMoon.Models.NotasPeriodo", b =>
                {
                    b.HasOne("SailorMoon.Models.Notas", "IdNotasNavigation")
                        .WithMany("NotasPeriodo")
                        .HasForeignKey("IdNotas")
                        .HasConstraintName("FK__notas_per__id_no__3C69FB99");

                    b.Navigation("IdNotasNavigation");
                });

            modelBuilder.Entity("SailorMoon.Models.Personal", b =>
                {
                    b.HasOne("SailorMoon.Models.Curso", "IdCursoNavigation")
                        .WithMany("Personal")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FK__personal__id_cur__32E0915F");

                    b.HasOne("SailorMoon.Models.TipoUsuario", "IdTipoUsuarioNavigation")
                        .WithMany("Personal")
                        .HasForeignKey("IdTipoUsuario")
                        .HasConstraintName("FK__personal__id_tip__31EC6D26");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdTipoUsuarioNavigation");
                });

            modelBuilder.Entity("SailorMoon.Models.Curso", b =>
                {
                    b.Navigation("Notas");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("SailorMoon.Models.Estudiante", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("ConduccionDescriptiva");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("SailorMoon.Models.Grado", b =>
                {
                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("SailorMoon.Models.Notas", b =>
                {
                    b.Navigation("NotasPeriodo");
                });

            modelBuilder.Entity("SailorMoon.Models.TipoUsuario", b =>
                {
                    b.Navigation("Personal");
                });
#pragma warning restore 612, 618
        }
    }
}
