// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SailorMoon.Models;

namespace SailorMoon.Context
{
    public partial class SailorMoonContext : DbContext
    {
        public SailorMoonContext()
        {
        }

        public SailorMoonContext(DbContextOptions<SailorMoonContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Asistencias> Asistencias { get; set; }
        public virtual DbSet<ConduccionDescriptiva> ConduccionDescriptiva { get; set; }
        public virtual DbSet<Curso> Curso { get; set; }
        public virtual DbSet<Estudiante> Estudiante { get; set; }
        public virtual DbSet<Grado> Grado { get; set; }
        public virtual DbSet<Institucion> Institucion { get; set; }
        public virtual DbSet<Notas> Notas { get; set; }
        public virtual DbSet<NotasPeriodo> NotasPeriodo { get; set; }
        public virtual DbSet<Personal> Personal { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Asistencias>(entity =>
            {
                entity.HasKey(e => e.IdAsistencias)
                    .HasName("PK__asistenc__B74A34E3F86B36F4");

                entity.ToTable("asistencias");

                entity.Property(e => e.IdAsistencias).HasColumnName("id_asistencias");

                entity.Property(e => e.IdEstudiante).HasColumnName("id_estudiante");

                entity.Property(e => e.InastInjustificada)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("inast_injustificada");

                entity.Property(e => e.InastJustificada)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("inast_justificada");

                entity.Property(e => e.TardInjustificada)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("tard_injustificada");

                entity.Property(e => e.TardJustificada)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("tard_justificada");

                entity.HasOne(d => d.IdEstudianteNavigation)
                    .WithMany(p => p.Asistencias)
                    .HasForeignKey(d => d.IdEstudiante)
                    .HasConstraintName("FK__asistenci__id_es__2B3F6F97");
            });

            modelBuilder.Entity<ConduccionDescriptiva>(entity =>
            {
                entity.HasKey(e => e.IdConduccionDescriptiva)
                    .HasName("PK__conducci__E2291AAA4A171E4F");

                entity.ToTable("conduccion_descriptiva");

                entity.Property(e => e.IdConduccionDescriptiva).HasColumnName("id_conduccion_descriptiva");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.IdEstudiante).HasColumnName("id_estudiante");

                entity.Property(e => e.IdPersonal)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("id_personal");

                entity.Property(e => e.Periodo)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("periodo");

                entity.HasOne(d => d.IdEstudianteNavigation)
                    .WithMany(p => p.ConduccionDescriptiva)
                    .HasForeignKey(d => d.IdEstudiante)
                    .HasConstraintName("FK__conduccio__id_pe__35BCFE0A");
            });

            modelBuilder.Entity<Curso>(entity =>
            {
                entity.HasKey(e => e.IdCurso)
                    .HasName("PK__curso__5D3F7502EB9E7BF4");

                entity.ToTable("curso");

                entity.Property(e => e.IdCurso).HasColumnName("id_curso");

                entity.Property(e => e.NombreCurso)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("nombre_curso");
            });

            modelBuilder.Entity<Estudiante>(entity =>
            {
                entity.HasKey(e => e.IdEstudiante)
                    .HasName("PK__estudian__E0B2763C131F02AF");

                entity.ToTable("estudiante");

                entity.Property(e => e.IdEstudiante).HasColumnName("id_estudiante");

                entity.Property(e => e.Apellidos)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("apellidos");

                entity.Property(e => e.Carnet)
                    .HasMaxLength(500)
                    .HasColumnName("carnet");

                entity.Property(e => e.CodigoEst)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codigo_est");

                entity.Property(e => e.Dni).HasColumnName("dni");

                entity.Property(e => e.IdGradoFk).HasColumnName("id_grado_fk");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.HasOne(d => d.IdGradoFkNavigation)
                    .WithMany(p => p.Estudiante)
                    .HasForeignKey(d => d.IdGradoFk)
                    .HasConstraintName("FK__estudiant__id_gr__286302EC");
            });

            modelBuilder.Entity<Grado>(entity =>
            {
                entity.HasKey(e => e.IdGrado)
                    .HasName("PK__grado__6DB797EE553FC898");

                entity.ToTable("grado");

                entity.Property(e => e.IdGrado).HasColumnName("id_grado");

                entity.Property(e => e.Grado1)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("grado");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("seccion");

                entity.Property(e => e.Tutor)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("tutor");
            });

            modelBuilder.Entity<Institucion>(entity =>
            {
                entity.HasKey(e => e.IdInstitucion)
                    .HasName("PK__instituc__680718D3D39D9159");

                entity.ToTable("institucion");

                entity.Property(e => e.IdInstitucion).HasColumnName("id_institucion");

                entity.Property(e => e.CodigoModular)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codigo_modular");

                entity.Property(e => e.Logo)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("logo");

                entity.Property(e => e.Nivel)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("nivel");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(85)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Notas>(entity =>
            {
                entity.HasKey(e => e.IdNotas)
                    .HasName("PK__notas__832F7CFAC639F399");

                entity.ToTable("notas");

                entity.Property(e => e.IdNotas).HasColumnName("id_notas");

                entity.Property(e => e.IdCurso).HasColumnName("id_Curso");

                entity.Property(e => e.IdEstudianteFk).HasColumnName("id_estudiante_fk");

                entity.Property(e => e.Nota1).HasColumnName("nota1");

                entity.Property(e => e.Nota2).HasColumnName("nota2");

                entity.Property(e => e.Nota3).HasColumnName("nota3");

                entity.Property(e => e.Nota4).HasColumnName("nota4");

                entity.Property(e => e.Promedio).HasColumnName("promedio");

                entity.HasOne(d => d.IdCursoNavigation)
                    .WithMany(p => p.Notas)
                    .HasForeignKey(d => d.IdCurso)
                    .HasConstraintName("FK__notas__id_Curso__38996AB5");

                entity.HasOne(d => d.IdEstudianteFkNavigation)
                    .WithMany(p => p.Notas)
                    .HasForeignKey(d => d.IdEstudianteFk)
                    .HasConstraintName("FK__notas__id_estudi__398D8EEE");
            });

            modelBuilder.Entity<NotasPeriodo>(entity =>
            {
                entity.HasKey(e => e.IdPeriodo)
                    .HasName("PK__notas_pe__801188B7406FD76B");

                entity.ToTable("notas_periodo");

                entity.Property(e => e.IdPeriodo).HasColumnName("id_periodo");

                entity.Property(e => e.IdNotas).HasColumnName("id_notas");

                entity.Property(e => e.NotaPeriodo1)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("nota_periodo1");

                entity.Property(e => e.NotaPeriodo2)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("nota_periodo2");

                entity.Property(e => e.NotaPeriodo3)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("nota_periodo3");

                entity.Property(e => e.NotaPeriodo4)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("nota_periodo4");

                entity.Property(e => e.PromedioAnual)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("promedio_anual");

                entity.HasOne(d => d.IdNotasNavigation)
                    .WithMany(p => p.NotasPeriodo)
                    .HasForeignKey(d => d.IdNotas)
                    .HasConstraintName("FK__notas_per__id_no__3C69FB99");
            });

            modelBuilder.Entity<Personal>(entity =>
            {
                entity.HasKey(e => e.IdPersonal)
                    .HasName("PK__personal__418FB8085ED2EB8C");

                entity.ToTable("personal");

                entity.Property(e => e.IdPersonal).HasColumnName("id_personal");

                entity.Property(e => e.Apellidos)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("apellidos");

                entity.Property(e => e.Clave)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("clave");

                entity.Property(e => e.IdCurso).HasColumnName("id_curso");

                entity.Property(e => e.IdTipoUsuario).HasColumnName("id_tipo_usuario");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("usuario");

                entity.HasOne(d => d.IdCursoNavigation)
                    .WithMany(p => p.Personal)
                    .HasForeignKey(d => d.IdCurso)
                    .HasConstraintName("FK__personal__id_cur__32E0915F");

                entity.HasOne(d => d.IdTipoUsuarioNavigation)
                    .WithMany(p => p.Personal)
                    .HasForeignKey(d => d.IdTipoUsuario)
                    .HasConstraintName("FK__personal__id_tip__31EC6D26");
            });

            modelBuilder.Entity<TipoUsuario>(entity =>
            {
                entity.HasKey(e => e.IdTipoUsuario)
                    .HasName("PK__tipo_usu__B17D78C8E2DB4D10");

                entity.ToTable("tipo_usuario");

                entity.Property(e => e.IdTipoUsuario).HasColumnName("id_tipo_usuario");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("tipo");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}